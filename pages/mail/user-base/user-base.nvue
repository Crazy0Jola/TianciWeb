<template>
	<view class="page">
		<!-- 导航栏 -->
		<free-nav-bar showBack :showRight="isNotMe" bgColor="bg-white">
			<free-icon-button slot="right"
			:icon="'\ue602'" :iconClass="iconClass"
			@click="like"></free-icon-button>
		</free-nav-bar>
		<view class="px-3 py-4 flex align-center bg-white border-bottom">
			<free-avater :src="getPhoto" size="120"></free-avater>
			<view class="flex flex-column ml-3 flex-1">
				<view class="flex align-center justify-between">
					<text class="font-lg font-weight-bold mb-1">{{userInfo.baseInfo.name}}</text>
				</view>
				<text class="font-md text-light-muted">手机号：{{userInfo.baseInfo.phone||"暂无数据"}}</text>
				<text class="font-md text-light-muted mt-1">公司：{{userInfo.baseInfo.companyName||"暂无数据"}}</text>
				<text class="font-md text-light-muted mt-1">职位：{{userInfo.baseInfo.post||"暂无数据"}}</text>
				<text class="font-md text-light-muted mt-1">个人简介：{{userInfo.baseInfo.description||"暂无数据"}}</text>
			</view>
		</view>

		<free-divider></free-divider>
		<!-- <free-list-item showRight :showLeftIcon="false">
			<view class="flex align-center">
				<text class="font-md text-dark mr-3">朋友圈</text>
				<image src="/static/images/demo/cate_01.png" 
				style="width: 90rpx;height: 90rpx;"
				class="mr-2"></image>
				<image src="/static/images/demo/cate_01.png"
				style="width: 90rpx;height: 90rpx;"
				class="mr-2"></image>
				<image src="/static/images/demo/cate_01.png"
				style="width: 90rpx;height: 90rpx;"
				class="mr-2"></image>
			</view>
		</free-list-item>
		<free-list-item title="更多信息" showRight :showLeftIcon="false"></free-list-item>
		<free-divider></free-divider> -->
		<free-list-item title="消息免打扰" showRight :showLeftIcon="false"
		:showRightIcon="false">
			<switch slot="right" :checked="getNoDisturb"  @change="setNoDisturb" color="#3578E5"/>
		</free-list-item>
		<free-list-item title="置顶聊天" showRight :showLeftIcon="false" 
		:showRightIcon="false">
			<switch slot="right" :checked="getIsTop" @change="setTop" color="#3578E5"/>
		</free-list-item>
		<free-divider></free-divider>
		<view class="py-3 flex align-center justify-center bg-white" @click="goChat">
			<text class="iconfont text-primary mr-1" 
			v-if="!isBlack">&#xe6c7;</text>
			<text class="font-md text-primary">{{isBlack ? '移出黑名单' : '发消息'}}</text>
		</view>
		
		
	</view>
</template>

<script>
	import freeNavBar from "@/components/free-ui/free-nav-bar.vue"
	import freeAvater from '@/components/free-ui/free-avater.vue';
	import freeDivider from "@/components/free-ui/free-divider.vue"
	import freeListItem from "@/components/free-ui/free-list-item.vue"
	import freeIconButton from '@/components/free-ui/free-icon-button.vue';
	
	var _this;
	var SERVER_API = getApp().globalData.SERVER_API
	export default {
		data() {
			return {
				token:"",
				myToken:"",
				isBlack:false,
				userInfo:{},
				isFollow:false
			}
		},
		components: {
			freeNavBar,
			freeAvater,
			freeDivider,
			freeListItem,
			freeIconButton
		},
		computed:{
			getPhoto(){
				uni.request({
					url:SERVER_API+'appUser/getUserDetailInfo',
					data:{
						token:_this.token
					},
					method:"POST",
					header:{
						token:_this.myToken
					},
					success(res) {
						_this.userInfo = res.data.result;
						_this.isFollow = _this.userInfo.baseInfo.isFollow; 
						//更新头像
						if(_this.userInfo.baseInfo.photo){
							uni.downloadFile({
								url: _this.userInfo.baseInfo.photo,
								success: (res) => {
									if (res.statusCode === 200) {	
										uni.saveFile({
											tempFilePath: res.tempFilePath,
											success: function (res) {
												var savedFilePath = plus.io.convertLocalFileSystemURL(res.savedFilePath);
												uni.setStorageSync("avatar"+_this.token,savedFilePath)	
											}
										});
									}
								}
							}); 
							
						}else{
							uni.setStorageSync("avatar"+_this.token,'/static/images/userpic.jpg');
						}
					}
				})
				return uni.getStorageSync("avatar"+_this.token)
			},
			iconClass(){
				return _this.isFollow? 'text-red':'text-gray';
			},
			getNoDisturb(){
				return uni.getStorageSync("noDisturb"+_this.myToken+_this.token)||false
			},
			getIsTop(){
				return uni.getStorageSync("isTop"+_this.myToken+_this.token)||false
			},
			isNotMe(){
				return _this.myToken!=_this.token
			}
		},
		onLoad:function (option) {
			_this=this;
			_this.token = option.token;
			_this.myToken = uni.getStorageSync("setUserData").token;
			
		},
		beforeDestroy() {
			
		},
		methods: {
			setNoDisturb(e){
				uni.setStorageSync("noDisturb"+_this.myToken+_this.token,e.detail.value)		
			},
			setTop(e){
				console.log(e.detail.value)
				uni.setStorageSync("isTop"+_this.myToken+_this.token,e.detail.value)
			},
			goChat(){
				var username = _this.token;
				var nickname = _this.userInfo.baseInfo.name;
				var avatar = "";
				uni.navigateTo({
					url: `/pages/chat/chat/chat?username=${username}&nickname=${nickname}&avatar=${avatar}`,
				});
			},
			like(){
				if(_this.isFollow==0){
					uni.request({
						url:SERVER_API+'appUser/follow',
						data:{
							followId:_this.token
						},
						header:{
							token:_this.myToken
						},
						method:"POST",
						success(res){
							console.log(res)
							if(res.data.code==1){
								uni.showToast({
									"title":"关注成功",
									"position":"bottom"
								})
								_this.isFollow=1;
							}else{
								console.log(res.data)
								uni.showToast({
									"title":res.data.message,
									"position":"bottom"
								})
							}
						}
					})
				}else{
					uni.request({
						url:SERVER_API+'appUser/unfollow',
						data:{
							followId:_this.token
						},
						header:{
							token:_this.myToken
						},
						method:"POST",
						success(res){
							console.log(res)
							if(res.data.code==1){
								uni.showToast({
									"title":"取消关注",
									"position":"bottom"
								})
								_this.isFollow=0
							}else{
								uni.showToast({
									"title":res.data.message,
									"position":"bottom"
								})
							}
						}
					})
				}
			}
		}
	}
</script>

<style>

</style>
