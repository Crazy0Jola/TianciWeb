<template>
	<view>
		<!-- 导航栏 -->
		<free-nav-bar title="应用仓设置" :showBack="true" :showRight="false">
		</free-nav-bar>
		
		<view class="p-3 bg-light position-fixed left-0 right-0" :style="'top:'+top+'px;'">
			<input type="text"  v-model="keyword" placeholder="搜索"  confirm-type="search" class="bg-white rounded pl-2" placeholder-class="text-center" style="height: 80rpx;"/>
		</view>
		<view :style="'margin-top:'+box_top+'px;'">
		<block v-for="(item,index) in allList" :key="index" >
			<free-list-item  v-for="(item2,index2) in filterList(item.data)" :key="index2" :title="item2.title" showRight :cover="item2.icon" coverSize="40" :showRightIcon="false" >
				<switch slot="right" :checked="getCheck(item2.id)"  @change="setCheck($event,item2.id)" color="#3578E5"/>
			</free-list-item>
		</block>
		</view>
		<view v-if="keyword !== '' && searchList.length == 0"
		class="flex align-center justify-center" 
		style="height: 100rpx; margin-top:200rpx;">
			<text class="font text-light-muted">暂无搜索结果</text>
		</view>
	</view>
</template>

<script>
	import freeNavBar from "@/components/free-ui/free-nav-bar.vue"
	import freeListItem from "@/components/free-ui/free-list-item.vue"
	var SERVER_API = getApp().globalData.SERVER_API;
	var _this;
	export default {
		components:{
			freeNavBar,
			freeListItem
		},
		data() {
			return {
				top:0,
				box_top:0,
				appList:[],
				keyword:'',
			}
		},
		onLoad() {
			_this = this;
			let res = uni.getSystemInfoSync()
			this.top = res.statusBarHeight + uni.upx2px(90)
			this.box_top = uni.upx2px(140)
			uni.request({
				url:SERVER_API+ "appWeb/getApplications",
				method:"POST",
				success(res) {
					_this.appList=res.data;
				}
			})
		},
		onBackPress(){
			uni.switchTab({
				url:"../tabbar/my/my"
			})
			return true;
		},
		computed:{
			// 最终列表
			allList(){
				if(this.keyword==''){
					return this.appList;
				}else{
					return this.searchList;
				}
			},
			// 搜索结果列表
			searchList(){
				if(this.keyword === ''){
					return []
				}
				var newList=[]
				for(var i=0,len1=_this.appList.length;i<len1;i++){
					var obj={
						groupId:_this.appList[i].groupId,
						data:[]
					}
					for(var j=0,len2=_this.appList[i].data.length;j<len2;j++){
						var app = _this.appList[i].data
						if(app[j].title.indexOf(_this.keyword)!=-1){
							obj.data.push(app[j])
						}
					}
					if(obj.data.length!=0){
						newList.push(obj);
					}
				}
				console.log(JSON.stringify(newList))
				return newList;
			},
		},
		methods: {
			filterList:function(list){
				return list.filter(function(item){
					if(item.fixed){
						return false;
					}else{
						return true;
					}
				})
			},
			getCheck(id){
				return uni.getStorageSync("application"+id)||false;
			},
			
			setCheck(e,id){
				console.log(e)
				console.log(id)
				uni.setStorageSync("application"+id,e.detail.value)	
			}
		}
	}
</script>

<style>

</style>
