<template>
	<view>
		
		<free-nav-bar title="应用仓"><view slot="right">
						<free-icon-button @click="goSetting"
						:icon="'\ue611'"></free-icon-button>
					</view></free-nav-bar>
		<free-list-item @imgClick="changeAvatar" @click="goUserInfo" :cover="avatar||'/static/images/userpic.jpg'" coverSize="120" showRight>
			<view class="flex flex-column" @click="goUserInfo">
				<text class="text-dark font-lg font-weight-bold">{{name}}</text>
				<text class="text-light-muted font mt-2">手机号：{{phone}}</text>
			</view>
			<view slot="right" @click="goUserInfo">
				<text class="iconfont font-md text-light-muted">&#xe614;</text>
			</view>
		</free-list-item>
		<free-divider></free-divider>
		
		<block v-for="(item,index) in appList" :key="index">
			<free-list-item v-for="(item2,index2) in filterList(item.data,item.groupId)" :key="index2" :title="item2.title" showRight @click="openUrl(item2.url)" coverSize="40" :cover="item2.icon">
			</free-list-item>
			<free-divider v-if="showDivider(item.groupId)"></free-divider>
		</block>
		<free-list-item cover="http://oos-cn.ctyunapi.cn/interconnect-container/application/YQ.png" coverSize="40" title="我要邀请" showRight @click="openUrl('http://117.83.152.39:8081/download/download.html')">
		</free-list-item>
		<free-divider></free-divider>
		
		<view class="bg-white flex align-stretch" @click="exit">
			<view class="flex-1 flex align-center  justify-center pr-3 py-3 pl-3">
					<text class="font-md text-red">退出登录</text>
			</view>
		</view>
		<free-divider></free-divider>
		
		<free-confirm ref="confirm" title="温馨提示">
			<text class="font-md">确认退出登录？</text>
		</free-confirm>
		
		<free-confirm ref="none" title="温馨提示" :showCancel="false">
			<text class="font-md">抱歉，您暂无权限查看</text>
		</free-confirm>
		
	</view>
</template>

<script>
	import freeNavBar from "@/components/free-ui/free-nav-bar.vue"
	import freeIconButton from "@/components/free-ui/free-icon-button.vue"
	import freeListItem from "@/components/free-ui/free-list-item.vue"
	import freeDivider from "@/components/free-ui/free-divider.vue"
	import freeConfirm from "@/components/free-ui/free-confirm.vue"
	import getCodeMsg from "@/js_sdk/ErrorCode.js"
	
	var JIM=getApp().globalData.JIM;	
	var SERVER_API = getApp().globalData.SERVER_API;
	var _this;
	export default {
		components: {
			freeNavBar,
			freeIconButton,
			freeListItem,
			freeDivider,
			freeConfirm
		},
		data() {
			return {
				avatar:"",
				name:"",
				phone:"",
				appList:[]
			}
		},
		onLoad(){
			_this = this;
			uni.request({
				url:SERVER_API+ "appWeb/getApplications",
				method:"POST",
				success(res) {
					_this.appList=res.data;
				}
			})
		},
		onShow(){
			this.$forceUpdate();
			const value = uni.getStorageSync('setUserData');
			var avatar = value.photo
			if(avatar){
				_this.avatar = avatar;
			}else{
				if(value.photo){
					uni.downloadFile({
						url: value.photo,
						success: (res) => {
							if (res.statusCode === 200) {	
								uni.saveFile({
									tempFilePath: res.tempFilePath,
									success: function (res) {
										var savedFilePath = plus.io.convertLocalFileSystemURL(res.savedFilePath);
										_this.avatar = savedFilePath;
										uni.setStorageSync("avatar"+value.token,savedFilePath)
									}
								});
							}
						}
					}); 
				}
			}
			
			_this.name = value.name;
			_this.phone = value.phone;
			
			if (value) {
				//有登录信息
				console.log("已登录用户：",value);	
				if(!JIM.isLogin()){
					_this.login(value.username,value.password)			
				}
			}else{
				uni.reLaunch({
					url: '../../login/login',
				});
			}
		},
		computed:{
			
		},
		methods: {
			filterList:function(list,groupId){
				var num=list.length;
				return list.filter(function(item){
					if(item.fixed){
						uni.setStorageSync("num"+groupId,num)
						return true;
					}else if(item.showDefault){
						var flag = uni.getStorageSync("application"+item.id);
						if(flag){
							uni.setStorageSync("num"+groupId,num)
							return true;
						}else if(!flag){
							num--;
							uni.setStorageSync("num"+groupId,num)
							return false;
						}else{
							uni.setStorageSync("application"+item.id,true);
							uni.setStorageSync("num"+groupId,num)
							return true;
						}
					}else{
						var flag = uni.getStorageSync("application"+item.id)||false;
						if(!flag){
							num--;
						}
						uni.setStorageSync("num"+groupId,num)
						return flag;
					}
				})
			},
			showDivider(id){
				return uni.getStorageSync("num"+id)>0;
			},
			changeAvatar(){
				uni.chooseImage({
					count:1,
					success: (res) => {			
						var images = [];
						var image_obj = {name:'portrait',uri:res.tempFilePaths[0]};
						images.push(image_obj);
						uni.uploadFile({
							url: SERVER_API+'appUser/modifyUserInfo',
							files:images,
							header:{
								"token":uni.getStorageSync("setUserData").token
							},
							success: (uploadFileRes) => {
								console.log(uploadFileRes)
								var res = JSON.parse(uploadFileRes.data)
								if(res.code==1){
									uni.showToast({
										"title":"更换头像成功",
									})
									var userData = uni.getStorageSync("setUserData");
									
									uni.downloadFile({
										url: res.result.photo,
										success: (res) => {
											if (res.statusCode === 200) {	
												uni.saveFile({
													tempFilePath: res.tempFilePath,
													success: function (res) {
														var savedFilePath = plus.io.convertLocalFileSystemURL(res.savedFilePath);
														userData.photo =savedFilePath;
														uni.setStorageSync("setUserData",userData)
													}
												});
											}
										}
									}); 
								}
							},
							fail:(res) =>{
								uni.showToast({
									"title":res.data.message,
									"position":"bottom"
								})
							}						
						})					
					}
				})
			},
			goUserInfo(){
				uni.navigateTo({
					url:"../../mine/mine"
				})
			},
			openUrl(url){
				if(url=="none"){
					_this.$refs.none.show((close)=>{
						close()
					})
				}else{
					uni.navigateTo({
						url: '../../webview/webview?url='+url.replace("?","&"),
					});
				}
			},
			goSetting(){
				uni.navigateTo({
					url: '../../setting/setting'
				})
			},
			exit(){
				this.$refs.confirm.show((close)=>{
					JIM.loginOut();
					this.$store.dispatch("setUserData","") //清空登录状态
					try {
						uni.removeStorageSync("setUserData")
						uni.removeStorageSync("allUser")
					} catch (e) {
						// error
					}
					uni.navigateTo({
						url:"../../login/login"
					})
					close()
				})
			},
			
		}
	}
</script>

<style>

</style>
